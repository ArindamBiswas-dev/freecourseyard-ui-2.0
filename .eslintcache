[{"/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/footerComponent/Footer.jsx":"1","/home/arindam/Desktop/freecourseyard/src/App.js":"2","/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/Home.jsx":"3","/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/appbarComponent/MuiAppBar.jsx":"4","/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/SuggestCourse.jsx":"5","/home/arindam/Desktop/freecourseyard/src/reportWebVitals.js":"6","/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/BodyComponent/MainBody.jsx":"7","/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/BodyComponent/MuiCard.jsx":"8","/home/arindam/Desktop/freecourseyard/src/index.js":"9","/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/LodingIndecator.jsx":"10","/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/PopularChoices.jsx":"11","/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/Hooks/useLoadData.jsx":"12","/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/appbarComponent/LogInDialog.jsx":"13","/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/appbarComponent/Dropdown.jsx":"14","/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/LogInPage.jsx":"15"},{"size":2494,"mtime":1612971385269,"results":"16","hashOfConfig":"17"},{"size":939,"mtime":1613752689200,"results":"18","hashOfConfig":"17"},{"size":1071,"mtime":1613445455699,"results":"19","hashOfConfig":"17"},{"size":7418,"mtime":1613753000663,"results":"20","hashOfConfig":"17"},{"size":6633,"mtime":1613913660269,"results":"21","hashOfConfig":"17"},{"size":362,"mtime":1606588250000,"results":"22","hashOfConfig":"17"},{"size":2210,"mtime":1613410048518,"results":"23","hashOfConfig":"17"},{"size":3148,"mtime":1613824180841,"results":"24","hashOfConfig":"17"},{"size":593,"mtime":1612801318017,"results":"25","hashOfConfig":"17"},{"size":739,"mtime":1612973409928,"results":"26","hashOfConfig":"17"},{"size":1055,"mtime":1613410266177,"results":"27","hashOfConfig":"17"},{"size":761,"mtime":1613409204238,"results":"28","hashOfConfig":"17"},{"size":3192,"mtime":1613448762279,"results":"29","hashOfConfig":"17"},{"size":2381,"mtime":1613754136621,"results":"30","hashOfConfig":"17"},{"size":6178,"mtime":1613756588046,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1t9j9kg",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/footerComponent/Footer.jsx",[],["71","72"],"/home/arindam/Desktop/freecourseyard/src/App.js",[],"/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/Home.jsx",[],"/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/appbarComponent/MuiAppBar.jsx",["73","74"],"import React, { useEffect, useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Styles from '../../../../App.module.css'\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { Drawer, List, ListItem, ListItemIcon } from '@material-ui/core';\r\nimport ExploreOutlinedIcon from '@material-ui/icons/ExploreOutlined';\r\nimport FlareOutlinedIcon from '@material-ui/icons/FlareOutlined';\r\nimport ControlPointOutlinedIcon from '@material-ui/icons/ControlPointOutlined';\r\nimport PermContactCalendarOutlinedIcon from '@material-ui/icons/PermContactCalendarOutlined';\r\nimport { Link } from \"react-router-dom\";\r\nimport LogInDialog from './LogInDialog';\r\nimport Dropdown from './Dropdown';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        backgroundColor: 'white',\r\n        borderBottom: '1px solid #9e9e9e',\r\n        top: \"0\",\r\n        position: \"-webkit-sticky\"\r\n    },\r\n    toolBar: {\r\n        display: 'flex',\r\n        justifyContent: \"space-between\"\r\n    },\r\n    iconBtn: {\r\n        marginRight: \"8px\"\r\n    },\r\n    searchInput: {\r\n        padding: \"10px 10px\",\r\n        border: \"1px solid #bdbdbd\",\r\n        width: \"20%\",\r\n        marginRight: \"5%\",\r\n        transition: \"all 0.4s\",\r\n        '&:hover': {\r\n            backgroundColor: \"#eeeeee\",\r\n            border: \"1px solid black\",\r\n        }\r\n    },\r\n    searchInput2: {\r\n        border: \"2px solid blue\",\r\n        padding: \"10px 10px\",\r\n        marginRight: \"5%\",\r\n        width: \"25%\",\r\n        transition: \"all 0.4s\",\r\n    },\r\n    inputStyle: {\r\n        padding: \"5px\",\r\n        backgroundColor: \"transparent\",\r\n        outline: \"none\",\r\n        color: \"black\",\r\n        border: \"none\",\r\n        width: \"100%\",\r\n    },\r\n    drawerRoot: {\r\n        '& .MuiDrawer-paper': {\r\n            width: \"75px\",\r\n            paddingTop: \"0\",\r\n            fontSize: \"14px\",\r\n            textAlign: \"center\"\r\n        },\r\n        '& .MuiListItem-root': {\r\n            display: \"flex\",\r\n            flexDirection: \"column\"\r\n        },\r\n        '& .MuiList-padding': {\r\n            padding: \"0\"\r\n        },\r\n        '& .drawerListItem': {\r\n            color: \"black\",\r\n            borderBottom: \"1px solid black\",\r\n            padding: \"5px 10px\",\r\n            fontSize: \"15px\"\r\n        },\r\n\r\n        '& .MuiSvgIcon-root': {\r\n            color: \"black\",\r\n            fontSize: \"55px\"\r\n        }\r\n    }\r\n})\r\n\r\nfunction MuiAppBar({ setSearchValue, isHide }) {\r\n    const classes = useStyles();\r\n\r\n    const [isBlue, setBlue] = useState(false);\r\n\r\n    const [isDrawerOpen, setDrawer] = useState(false);\r\n\r\n    const [searchValue, setsearchValue] = useState(\"\");\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const onFocusHandelar = () => {\r\n        setBlue(true);\r\n    }\r\n\r\n    const toggelDrawer = (open) => (event) => {\r\n        // console.log(\"clicked\")\r\n        setDrawer(open);\r\n    }\r\n\r\n    const onSubmitHandeler = e => {\r\n\r\n        console.log(searchValue);\r\n        setSearchValue(searchValue);\r\n\r\n        e.preventDefault();\r\n    }\r\n\r\n    const onChangeHandelar = e => {\r\n        setsearchValue(e.target.value);\r\n    }\r\n\r\n    // const onClickNewPageHandeler = (e) => {\r\n    //     e.preventDefault();\r\n\r\n    //     window.location.href = '/suggestcourse';\r\n    // }\r\n\r\n    useEffect(() => {\r\n\r\n    }, [searchValue])\r\n\r\n    return (\r\n        <div>\r\n            <AppBar elevation={3} className={classes.root}>\r\n                <Toolbar className={classes.toolBar}>\r\n                    <div style={{ display: \"flex\" }}>\r\n                        <IconButton edge=\"start\" className={classes.iconBtn} onClick={toggelDrawer(true)}>\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Drawer anchor=\"left\" open={isDrawerOpen} onClose={toggelDrawer(false)} className={classes.drawerRoot}>\r\n                            <List>\r\n                                <ListItem button className=\"drawerListItem\" component={Link} to=\"/\">\r\n                                    <ListItemIcon>\r\n                                        <ExploreOutlinedIcon />\r\n                                    </ListItemIcon>\r\n                                    <div><p style={{ margin: \"0\" }}>Explore</p></div>\r\n                                </ListItem>\r\n                                <ListItem button className=\"drawerListItem\" component={Link} to=\"/popularchoices\">\r\n                                    <ListItemIcon>\r\n                                        <FlareOutlinedIcon />\r\n                                    </ListItemIcon>\r\n                                    <div><p style={{ margin: \"0\" }}>Popular Choices</p></div>\r\n                                </ListItem>\r\n                                <ListItem button className=\"drawerListItem\" component={Link} to=\"/suggestcourse\">\r\n                                    <ListItemIcon>\r\n                                        <ControlPointOutlinedIcon />\r\n                                    </ListItemIcon>\r\n                                    <div><p style={{ margin: \"0\" }}>Suggest Course</p></div>\r\n                                </ListItem>\r\n                                <ListItem button className=\"drawerListItem\" component=\"a\" href=\"mailto:www.freecourseyard.com\">\r\n                                    <ListItemIcon>\r\n                                        <PermContactCalendarOutlinedIcon />\r\n                                    </ListItemIcon>\r\n                                    <div><p style={{ margin: \"0\" }}>Contact</p></div>\r\n                                </ListItem>\r\n                            </List>\r\n                        </Drawer>\r\n                        <p className={Styles.textLg} style={{ position: \"relative\", bottom: \"-11px\" }}>FREECOURSEYARD</p>\r\n                    </div>\r\n                    {(!isHide) ? (\r\n                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", width: \"100%\", alignItems: \"center\" }}>\r\n                            <div className={(!isBlue) ? classes.searchInput : classes.searchInput2}>\r\n                                <form onSubmit={onSubmitHandeler}>\r\n                                    <input placeholder=\"Search...\" className={classes.inputStyle} onFocus={onFocusHandelar}\r\n                                        onBlur={() => { setBlue(false) }} value={searchValue} onChange={onChangeHandelar} />\r\n                                </form>\r\n                            </div>\r\n                            <div>\r\n                                <IconButton\r\n                                    aria-label=\"delete\"\r\n                                    style={{ padding: \"0\", color: \"#bdbdbd\" }}\r\n                                    onClick={() => setOpen(!open)}>\r\n                                    <AccountCircleIcon fontSize=\"large\" />\r\n                                </IconButton>\r\n                            </div>\r\n                        </div>\r\n                        ) : (<> </>)\r\n                    }\r\n                </Toolbar>\r\n                {open && <Dropdown />}\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MuiAppBar\r\n",["75","76"],"/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/SuggestCourse.jsx",["77","78"],"/home/arindam/Desktop/freecourseyard/src/reportWebVitals.js",[],["79","80"],"/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/BodyComponent/MainBody.jsx",[],["81","82"],"/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/BodyComponent/MuiCard.jsx",[],"/home/arindam/Desktop/freecourseyard/src/index.js",[],"/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/LodingIndecator.jsx",["83","84","85","86"],"import React from 'react';\nimport { usePromiseTracker } from \"react-promise-tracker\";\nimport { ClimbingBoxLoader, ClockLoader, GridLoader, PropagateLoader, RotateLoader } from \"react-spinners\";\n\nfunction LodingIndecator() {\n\n    const { promiseInProgress } = usePromiseTracker();\n\n    return (\n        promiseInProgress && (\n            <div\n                style={{\n                    width: \"100%\",\n                    height: \"100%\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                }}\n            >\n                <GridLoader color=\"#0E27A8\" loading={true} size={20} />\n            </div>\n        )\n    );\n};\n\nexport default LodingIndecator\n",["87","88"],"/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/PopularChoices.jsx",[],"/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/Hooks/useLoadData.jsx",[],"/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/appbarComponent/LogInDialog.jsx",["89"],"import { Dialog, makeStyles, TextField, useMediaQuery, useTheme } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: \"10px\",\n    },\n    textField: {\n        width: \"200%\",\n        margin: \"0px 10px\",\n    },\n    submitBtn: {\n        marginTop: \"30px\",\n        backgroundColor: \"#afaffb\",\n        padding: \"10px 30px\",\n        fontSize: \"15px\",\n        border: \"1px solid black\",\n        position: \"relative\",\n        left: \"46%\",\n        marginLeft: \"-50px\",\n        fontWeight: \"bold\"\n    }\n}))\n\nfunction LogInDialog({ isOpen, handleClose }) {\n\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const classes = useStyles();\n\n    const [errorObj, seterrorObj] = useState({\n        eemail: false,\n        epassword: false,\n    });\n\n    const [valueObj, setvalueObj] = useState({\n        email: \"\",\n        password: \"\",\n    });\n\n    const validate = () => {\n        for (const value in valueObj) {\n            if (valueObj[value] === \"\") {\n\n                seterrorObj(prevState => ({\n                    ...prevState,\n                    [`e${value}`]: true\n                }));\n                return false;\n            }\n        }\n        return true;\n    }\n\n    const onSubmitHandeler = (e) => {\n        e.preventDefault();\n\n        console.log(\"sumit click\");\n\n        if (validate()) {\n            // send form data\n            console.log(\"No error found...\");\n            seterrorObj({\n                eemail: false,\n                epassword: false,\n            });\n\n            // sendDataToServer(); check in server\n\n        } else {\n            console.log(\"error happend...\");\n        }\n    }\n\n    const onChangeHandelar = (e) => {\n        const { name, value } = e.target;\n        setvalueObj(prevState => ({\n            ...prevState,\n            [name]: value.trim()\n        }));\n    }\n\n    return (\n        <div>\n            <Dialog\n                fullScreen={fullScreen}\n                open={isOpen}\n                onClose={handleClose}\n                \n            >\n                <div className={classes.root}>\n                    <form onSubmit={onSubmitHandeler}>\n                        <div className={classes.textField}>\n                            <TextField id=\"standard-basic\" label=\"Title of Course\" defaultValue=\"\"\n                                error={(errorObj.email) ? true : false} helperText={(errorObj.email) ? \"This field required\" : \"\"}\n                                onChange={onChangeHandelar} name=\"title\" type=\"text\" />\n                        </div>\n                        <div className={classes.textField}>\n                            <TextField id=\"standard-basic\" label=\"Instructor\" defaultValue=\"\"\n                                error={(errorObj.password) ? true : false} helperText={(errorObj.password) ? \"This field required\" : \"\"}\n                                onChange={onChangeHandelar} name=\"instructor\" type=\"password\" />\n                        </div>\n                    </form>\n                </div>\n            </Dialog>\n        </div>\n    )\n}\n\nexport default LogInDialog\n","/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/appbarComponent/Dropdown.jsx",["90","91"],"import { makeStyles } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport DirectionsIcon from '@material-ui/icons/Directions';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n    dropdown: {\n        position: \"absolute\",\n        top: \"64px\",\n        right: \"0\",\n        width: \"200px\",\n        transform: \"translateX(-3%)\",\n        backgroundColor: \"whitesmoke\",\n        border: \"1px solid gray\",\n        borderRadius: \"8px\",\n        padding: \"1rem\",\n        overflow: \"hidden\",\n        zIndex: \"1\",\n        boxShadow: \"rgba(50, 50, 93, 0.4) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px\",\n    },\n    menuItem: {\n        height: \"50px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        borderRadius: \"8px\",\n        padding: \"0.5rem\",\n        textDecoration: \"none\",\n        '&:hover': {\n            backgroundColor: \"lightgray\"\n        }\n      },\n    iconButton: {\n        margin: \"2px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    }\n})\n\nfunction Dropdown() {\n\n    const classes = useStyles();    \n    const [logIn, setlogIn] = useState(false);\n\n    return (\n        <div className={classes.dropdown}>\n            {\n                (!logIn) ?\n                    (\n                        <>\n                            <DropDownItem text=\"Log In\" icon={<DirectionsIcon />} to=\"login\"/>\n                            <DropDownItem text=\"Sign Up\" icon={<AddCircleOutlineIcon />} to=\"signup\"/>\n                        </>\n                    )\n                    : (\n                        <>\n                            <DropDownItem text=\"Feavorites\" icon={<FavoriteIcon />} />\n                            <DropDownItem text=\"Log Out\" icon={<ExitToAppIcon />} />\n                        </>\n                    )\n            }\n        </div>\n    )\n}\nexport default Dropdown\n\nfunction DropDownItem(props) {\n    const classes = useStyles();    \n    return (\n        <a href={`/${props.to}`} className={classes.menuItem} >\n            <span className={classes.iconButton} style={{marginRight: \"15px\"}}>{props.icon}</span>\n            <p>{props.text}</p>\n        </a>\n    )\n}\n","/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/LogInPage.jsx",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":15,"column":8,"nodeType":"98","messageId":"99","endLine":15,"endColumn":19},{"ruleId":"96","severity":1,"message":"100","line":97,"column":11,"nodeType":"98","messageId":"99","endLine":97,"endColumn":22},{"ruleId":"92","replacedBy":"101"},{"ruleId":"94","replacedBy":"102"},{"ruleId":"96","severity":1,"message":"103","line":4,"column":17,"nodeType":"98","messageId":"99","endLine":4,"endColumn":26},{"ruleId":"96","severity":1,"message":"104","line":87,"column":17,"nodeType":"98","messageId":"99","endLine":87,"endColumn":20},{"ruleId":"92","replacedBy":"105"},{"ruleId":"94","replacedBy":"106"},{"ruleId":"92","replacedBy":"107"},{"ruleId":"94","replacedBy":"108"},{"ruleId":"96","severity":1,"message":"109","line":3,"column":10,"nodeType":"98","messageId":"99","endLine":3,"endColumn":27},{"ruleId":"96","severity":1,"message":"110","line":3,"column":29,"nodeType":"98","messageId":"99","endLine":3,"endColumn":40},{"ruleId":"96","severity":1,"message":"111","line":3,"column":54,"nodeType":"98","messageId":"99","endLine":3,"endColumn":69},{"ruleId":"96","severity":1,"message":"112","line":3,"column":71,"nodeType":"98","messageId":"99","endLine":3,"endColumn":83},{"ruleId":"92","replacedBy":"113"},{"ruleId":"94","replacedBy":"114"},{"ruleId":"96","severity":1,"message":"103","line":2,"column":17,"nodeType":"98","messageId":"99","endLine":2,"endColumn":26},{"ruleId":"96","severity":1,"message":"115","line":7,"column":10,"nodeType":"98","messageId":"99","endLine":7,"endColumn":14},{"ruleId":"96","severity":1,"message":"116","line":46,"column":19,"nodeType":"98","messageId":"99","endLine":46,"endColumn":27},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'LogInDialog' is defined but never used.","Identifier","unusedVar","'handleClose' is assigned a value but never used.",["117"],["118"],"'useEffect' is defined but never used.","'res' is assigned a value but never used.",["117"],["118"],["117"],["118"],"'ClimbingBoxLoader' is defined but never used.","'ClockLoader' is defined but never used.","'PropagateLoader' is defined but never used.","'RotateLoader' is defined but never used.",["117"],["118"],"'Link' is defined but never used.","'setlogIn' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]