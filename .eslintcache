[{"/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/footerComponent/Footer.jsx":"1","/home/arindam/Desktop/freecourseyard/src/App.js":"2","/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/Home.jsx":"3","/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/appbarComponent/MuiAppBar.jsx":"4","/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/SuggestCourse.jsx":"5","/home/arindam/Desktop/freecourseyard/src/reportWebVitals.js":"6","/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/BodyComponent/MainBody.jsx":"7","/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/BodyComponent/MuiCard.jsx":"8","/home/arindam/Desktop/freecourseyard/src/index.js":"9","/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/LodingIndecator.jsx":"10"},{"size":2493,"mtime":1612186563926,"results":"11","hashOfConfig":"12"},{"size":703,"mtime":1612797089350,"results":"13","hashOfConfig":"12"},{"size":701,"mtime":1612799526666,"results":"14","hashOfConfig":"12"},{"size":6576,"mtime":1609693282091,"results":"15","hashOfConfig":"12"},{"size":6002,"mtime":1612191771851,"results":"16","hashOfConfig":"12"},{"size":362,"mtime":1606588250000,"results":"17","hashOfConfig":"12"},{"size":2613,"mtime":1612801340272,"results":"18","hashOfConfig":"12"},{"size":2787,"mtime":1612801327088,"results":"19","hashOfConfig":"12"},{"size":593,"mtime":1612801318017,"results":"20","hashOfConfig":"12"},{"size":700,"mtime":1612800960318,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1t9j9kg",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/footerComponent/Footer.jsx",[],["45","46"],"/home/arindam/Desktop/freecourseyard/src/App.js",[],"/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/Home.jsx",["47"],"/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/appbarComponent/MuiAppBar.jsx",["48"],"import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Styles from '../../../../App.module.css'\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { Drawer, List, ListItem, ListItemIcon } from '@material-ui/core';\r\nimport ExploreOutlinedIcon from '@material-ui/icons/ExploreOutlined';\r\nimport FlareOutlinedIcon from '@material-ui/icons/FlareOutlined';\r\nimport ControlPointOutlinedIcon from '@material-ui/icons/ControlPointOutlined';\r\nimport PermContactCalendarOutlinedIcon from '@material-ui/icons/PermContactCalendarOutlined';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        backgroundColor: 'white',\r\n        borderBottom: '1px solid #9e9e9e',\r\n        top: \"0\",\r\n        position: \"-webkit-sticky\"\r\n    },\r\n    toolBar: {\r\n        display: 'flex',\r\n        justifyContent: \"space-between\"\r\n    },\r\n    iconBtn: {\r\n        marginRight: \"8px\"\r\n    },\r\n    searchInput: {\r\n        padding: \"10px 10px\",\r\n        border: \"1px solid #bdbdbd\",\r\n        width: \"20%\",\r\n        marginRight: \"5%\",\r\n        transition: \"all 0.4s\",\r\n        '&:hover': {\r\n            backgroundColor: \"#eeeeee\",\r\n            border: \"1px solid black\",\r\n        }\r\n    },\r\n    searchInput2: {\r\n        border: \"2px solid blue\",\r\n        padding: \"10px 10px\",\r\n        marginRight: \"5%\",\r\n        width: \"25%\",\r\n        transition: \"all 0.4s\",\r\n    },\r\n    inputStyle: {\r\n        padding: \"5px\",\r\n        backgroundColor: \"transparent\",\r\n        outline: \"none\",\r\n        color: \"black\",\r\n        border: \"none\",\r\n        width: \"100%\",\r\n    },\r\n    drawerRoot: {\r\n        '& .MuiDrawer-paper': {\r\n            width: \"75px\",\r\n            paddingTop: \"0\",\r\n            fontSize: \"14px\",\r\n            textAlign: \"center\"\r\n        },\r\n        '& .MuiListItem-root': {\r\n            display: \"flex\",\r\n            flexDirection: \"column\"\r\n        },\r\n        '& .MuiList-padding': {\r\n            padding: \"0\"\r\n        },\r\n        '& .drawerListItem': {\r\n            color: \"black\",\r\n            borderBottom: \"1px solid black\",\r\n            padding: \"5px 10px\",\r\n            fontSize: \"15px\"\r\n        },\r\n\r\n        '& .MuiSvgIcon-root': {\r\n            color: \"black\",\r\n            fontSize: \"55px\"\r\n        }\r\n    }\r\n})\r\n\r\nfunction MuiAppBar(props) {\r\n    const classes = useStyles();\r\n\r\n    const [isBlue, setBlue] = useState(false);\r\n\r\n    const [isDrawerOpen, setDrawer] = useState(false);\r\n\r\n    const [searchValue, setsearchValue] = useState(\"\");\r\n\r\n    const onFocusHandelar = () => {\r\n        setBlue(true);\r\n    }\r\n\r\n    const toggelDrawer = (open) => (event) => {\r\n        console.log(\"clicked\")\r\n        setDrawer(open);\r\n    }\r\n\r\n    const onChangeHandelar = e => {\r\n        setsearchValue(e.target.value);\r\n        props.onChange(e.target.value);\r\n    }\r\n\r\n    const onClickNewPageHandeler = (e) => {\r\n        e.preventDefault();\r\n\r\n        window.location.href = '/suggestcourse';\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <AppBar elevation={3} className={classes.root}>\r\n                <Toolbar className={classes.toolBar}>\r\n                    <div style={{ display: \"flex\" }}>\r\n                        <IconButton edge=\"start\" className={classes.iconBtn} onClick={toggelDrawer(true)}>\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Drawer anchor=\"left\" open={isDrawerOpen} onClose={toggelDrawer(false)} className={classes.drawerRoot}>\r\n                            <List>\r\n                                <ListItem button className=\"drawerListItem\" component={Link} to=\"/\">\r\n                                    <ListItemIcon>\r\n                                        <ExploreOutlinedIcon />\r\n                                    </ListItemIcon>\r\n                                    <div><p style={{ margin: \"0\" }}>Explore</p></div>\r\n                                </ListItem>\r\n                                <ListItem button className=\"drawerListItem\" component={Link} to=\"/popularchoices\">\r\n                                    <ListItemIcon>\r\n                                        <FlareOutlinedIcon />\r\n                                    </ListItemIcon>\r\n                                    <div><p style={{ margin: \"0\" }}>Popular Choices</p></div>\r\n                                </ListItem>\r\n                                <ListItem button className=\"drawerListItem\" component={Link} to=\"/suggestcourse\">\r\n                                    <ListItemIcon>\r\n                                        <ControlPointOutlinedIcon />\r\n                                    </ListItemIcon>\r\n                                    <div><p style={{ margin: \"0\" }}>Suggest Course</p></div>\r\n                                </ListItem>\r\n                                <ListItem button className=\"drawerListItem\" component=\"a\" href=\"mailto:www.freecourseyard.com\">\r\n                                    <ListItemIcon>\r\n                                        <PermContactCalendarOutlinedIcon />\r\n                                    </ListItemIcon>\r\n                                    <div><p style={{ margin: \"0\" }}>Contact</p></div>\r\n                                </ListItem>\r\n                            </List>\r\n                        </Drawer>\r\n                        <p className={Styles.textLg} style={{ position: \"relative\", bottom: \"-11px\" }}>FREECOURSEYARD</p>\r\n                    </div>\r\n                    <div style={{ display: \"flex\", justifyContent: \"flex-end\", width: \"100%\", alignItems: \"center\" }}>\r\n                        <div className={(!isBlue) ? classes.searchInput : classes.searchInput2}>\r\n                            <input placeholder=\"Search...\" className={classes.inputStyle} onFocus={onFocusHandelar}\r\n                                onBlur={() => { setBlue(false) }} value={searchValue} onChange={onChangeHandelar} />\r\n                        </div>\r\n                        <div>\r\n                            <IconButton aria-label=\"delete\" style={{ padding: \"0\", color: \"#bdbdbd\" }}>\r\n                                <AccountCircleIcon fontSize=\"large\" />\r\n                            </IconButton>\r\n                        </div>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MuiAppBar\r\n","/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/SuggestCourse.jsx",["49"],"import { Button, makeStyles, Snackbar, TextField } from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Axios from 'axios';\nimport React, { useState } from 'react'\nimport MuiAppBar from './appbarComponent/MuiAppBar';\nimport Footer from './footerComponent/Footer';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: \"auto\",\n        width: \"60%\",\n        '& .MuiFormControl-root': {\n            width: \"100%\",\n            marginTop: \"30px\",\n        },\n        '& .MuiInputBase-input': {\n            fontSize: \"1.3rem\"\n        }\n    },\n    textField: {\n        width: \"100%\",\n    },\n    heading: {\n        fontSize: \"70px\",\n        textAlign: \"center\",\n        marginBottom: \"0\",\n        marginTop: \"100px\",\n        [theme.breakpoints.down('sm')]: {\n            fontSize: \"30px\",\n        },\n    },\n    submitBtn: {\n        marginTop: \"30px\",\n        backgroundColor: \"#afaffb\",\n        padding: \"10px 30px\",\n        fontSize: \"15px\",\n        border: \"1px solid black\",\n        position: \"relative\",\n        left: \"46%\",\n        marginLeft: \"-50px\",\n        fontWeight: \"bold\"\n    }\n}))\n\n\n\nfunction SuggestCourse(props) {\n    const isAddCourse = props.addCourse;\n\n    const title = (isAddCourse) ? `Add` : `Suggest`;\n\n    const classes = useStyles();\n\n    const [errorObj, seterrorObj] = useState({\n        etitle: false,\n        einstructor: false,\n        ecourseUrl: false,\n        edescription: false\n    });\n\n    const [valueObj, setvalueObj] = useState({\n        title: \"\",\n        instructor: \"\",\n        courseUrl: \"\",\n        description: \"\"\n    });\n\n    const [snackBarOpen, setBar] = useState(false);\n\n    const validate = () => {\n        for (const value in valueObj) {\n            if (valueObj[value] === \"\") {\n\n                seterrorObj(prevState => ({\n                    ...prevState,\n                    [`e${value}`]: true\n                }));\n                return false;\n            }\n        }\n        return true;\n    }\n\n    const sendDataToServer = async () => {\n        try {\n            setBar(true);\n            let res = await Axios.post(`http://localhost:8000/addcourse`, valueObj);\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const onSubmitHandeler = (e) => {\n        e.preventDefault();\n\n        console.log(\"sumit click\");\n\n        if (validate()) {\n            // send form data\n            console.log(\"No error found...\");\n            seterrorObj({\n                etitle: false,\n                einstructor: false,\n                ecourseUrl: false,\n                edescription: false\n            });\n            sendDataToServer();\n\n        } else {\n            console.log(\"error happend...\");\n\n        }\n    }\n\n    const onChangeHandelar = (e) => {\n        const { name, value } = e.target;\n        setvalueObj(prevState => ({\n            ...prevState,\n            [name]: value.trim()\n        }));\n    }\n\n    const handleClose = () => {\n        setBar(false);\n      };\n\n    function Alert(props) {\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n    }\n\n    return (\n        <div>\n            <MuiAppBar />\n            <p className={classes.heading}>{title} a Course</p>\n            <div className={classes.root}>\n                <form onSubmit={onSubmitHandeler}>\n                    <div className={classes.textField}>\n                        <TextField id=\"standard-basic\" label=\"Title of Course\" defaultValue=\"\"\n                            error={(errorObj.etitle) ? true : false} helperText={(errorObj.etitle) ? \"This field required\" : \"\"}\n                            onChange={onChangeHandelar} name=\"title\" />\n                    </div>\n                    <div className={classes.textField}>\n                        <TextField id=\"standard-basic\" label=\"Instructor\" defaultValue=\"\"\n                            error={(errorObj.einstructor) ? true : false} helperText={(errorObj.einstructor) ? \"This field required\" : \"\"}\n                            onChange={onChangeHandelar} name=\"instructor\" />\n                    </div>\n                    <div className={classes.textField}>\n                        <TextField id=\"standard-basic\" label=\"Course Url\" defaultValue=\"\"\n                            error={(errorObj.ecourseUrl) ? true : false} helperText={(errorObj.ecourseUrl) ? \"This field required\" : \"\"}\n                            onChange={onChangeHandelar} name=\"courseUrl\" />\n                    </div>\n                    {(!isAddCourse) ?\n                        (<div className={classes.textField}>\n                            <TextField id=\"standard-basic\" label=\"Description\" defaultValue=\"\" multiline\n                                error={(errorObj.edescription) ? true : false} helperText={(errorObj.edescription) ? \"This field required\" : \"\"}\n                                onChange={onChangeHandelar} name=\"description\" />\n                        </div>) :\n\n                        (<div className={classes.textField}>\n                            <TextField id=\"standard-basic\" label=\"Image Url\" defaultValue=\"\" multiline\n                                error={(errorObj.edescription) ? true : false} helperText={(errorObj.edescription) ? \"This field required\" : \"\"}\n                                onChange={onChangeHandelar} name=\"imageUrl\" />\n                        </div>)}\n\n                    <Button disableElevation className={classes.submitBtn} type=\"submit\">Send</Button>\n                    <Snackbar open={snackBarOpen} autoHideDuration={3000} anchorOrigin={{ vertical: 'top', horizontal: 'center' }} onClose={handleClose}>\n                        <Alert severity=\"success\" onClose={handleClose}>\n                            {(isAddCourse) ? `Course Added!` : `Request Send!`}\n                        </Alert>\n                    </Snackbar>\n                </form>\n            </div>\n            <Footer />\n        </div>\n    )\n}\n\nexport default SuggestCourse        // name, instructor, course url, Brife Description","/home/arindam/Desktop/freecourseyard/src/reportWebVitals.js",[],"/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/BodyComponent/MainBody.jsx",["50"],"/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/BodyComponent/MuiCard.jsx",[],"/home/arindam/Desktop/freecourseyard/src/index.js",[],"/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/LodingIndecator.jsx",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":5,"column":8,"nodeType":"57","messageId":"58","endLine":5,"endColumn":23},{"ruleId":"55","severity":1,"message":"59","line":107,"column":11,"nodeType":"57","messageId":"58","endLine":107,"endColumn":33},{"ruleId":"55","severity":1,"message":"60","line":87,"column":17,"nodeType":"57","messageId":"58","endLine":87,"endColumn":20},{"ruleId":"55","severity":1,"message":"61","line":31,"column":28,"nodeType":"57","messageId":"58","endLine":31,"endColumn":39},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'LodingIndecator' is defined but never used.","Identifier","unusedVar","'onClickNewPageHandeler' is assigned a value but never used.","'res' is assigned a value but never used.","'searchValue' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]