[{"/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/footerComponent/Footer.jsx":"1","/home/arindam/Desktop/freecourseyard/src/App.js":"2","/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/Home.jsx":"3","/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/appbarComponent/MuiAppBar.jsx":"4","/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/SuggestCourse.jsx":"5","/home/arindam/Desktop/freecourseyard/src/reportWebVitals.js":"6","/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/BodyComponent/MainBody.jsx":"7","/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/BodyComponent/MuiCard.jsx":"8","/home/arindam/Desktop/freecourseyard/src/index.js":"9","/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/LodingIndecator.jsx":"10","/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/PopularChoices.jsx":"11","/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/Hooks/useLoadData.jsx":"12","/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/appbarComponent/LogInDialog.jsx":"13","/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/appbarComponent/Dropdown.jsx":"14","/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/LogInPage.jsx":"15","/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/LogOut.jsx":"16","/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/FavoriteCourses.jsx":"17"},{"size":2494,"mtime":1612971385269,"results":"18","hashOfConfig":"19"},{"size":1921,"mtime":1614875734428,"results":"20","hashOfConfig":"19"},{"size":1290,"mtime":1614479011466,"results":"21","hashOfConfig":"19"},{"size":7315,"mtime":1614487744388,"results":"22","hashOfConfig":"19"},{"size":6130,"mtime":1614949493439,"results":"23","hashOfConfig":"19"},{"size":362,"mtime":1606588250000,"results":"24","hashOfConfig":"19"},{"size":1902,"mtime":1614877827625,"results":"25","hashOfConfig":"19"},{"size":3768,"mtime":1614864340113,"results":"26","hashOfConfig":"19"},{"size":593,"mtime":1612801318017,"results":"27","hashOfConfig":"19"},{"size":739,"mtime":1612973409928,"results":"28","hashOfConfig":"19"},{"size":1055,"mtime":1613410266177,"results":"29","hashOfConfig":"19"},{"size":715,"mtime":1614877065118,"results":"30","hashOfConfig":"19"},{"size":2882,"mtime":1614483746740,"results":"31","hashOfConfig":"19"},{"size":2184,"mtime":1614500681729,"results":"32","hashOfConfig":"19"},{"size":7138,"mtime":1614783487343,"results":"33","hashOfConfig":"19"},{"size":431,"mtime":1614491889077,"results":"34","hashOfConfig":"19"},{"size":1075,"mtime":1614877909511,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"116sbw1",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/footerComponent/Footer.jsx",[],["81","82"],"/home/arindam/Desktop/freecourseyard/src/App.js",[],"/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/Home.jsx",[],"/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/appbarComponent/MuiAppBar.jsx",["83","84"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Styles from \"../../../../App.module.css\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport { Drawer, List, ListItem, ListItemIcon } from \"@material-ui/core\";\r\nimport ExploreOutlinedIcon from \"@material-ui/icons/ExploreOutlined\";\r\nimport FlareOutlinedIcon from \"@material-ui/icons/FlareOutlined\";\r\nimport ControlPointOutlinedIcon from \"@material-ui/icons/ControlPointOutlined\";\r\nimport PermContactCalendarOutlinedIcon from \"@material-ui/icons/PermContactCalendarOutlined\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LogInDialog from \"./LogInDialog\";\r\nimport Dropdown from \"./Dropdown\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: \"white\",\r\n    borderBottom: \"1px solid #9e9e9e\",\r\n    top: \"0\",\r\n    position: \"-webkit-sticky\",\r\n  },\r\n  toolBar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  iconBtn: {\r\n    marginRight: \"8px\",\r\n  },\r\n  searchInput: {\r\n    padding: \"10px 10px\",\r\n    border: \"1px solid #bdbdbd\",\r\n    width: \"20%\",\r\n    marginRight: \"5%\",\r\n    transition: \"all 0.4s\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#eeeeee\",\r\n      border: \"1px solid black\",\r\n    },\r\n  },\r\n  searchInput2: {\r\n    border: \"2px solid blue\",\r\n    padding: \"10px 10px\",\r\n    marginRight: \"5%\",\r\n    width: \"25%\",\r\n    transition: \"all 0.4s\",\r\n  },\r\n  inputStyle: {\r\n    padding: \"5px\",\r\n    backgroundColor: \"transparent\",\r\n    outline: \"none\",\r\n    color: \"black\",\r\n    border: \"none\",\r\n    width: \"100%\",\r\n  },\r\n  drawerRoot: {\r\n    \"& .MuiDrawer-paper\": {\r\n      width: \"75px\",\r\n      paddingTop: \"0\",\r\n      fontSize: \"14px\",\r\n      textAlign: \"center\",\r\n    },\r\n    \"& .MuiListItem-root\": {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n    \"& .MuiList-padding\": {\r\n      padding: \"0\",\r\n    },\r\n    \"& .drawerListItem\": {\r\n      color: \"black\",\r\n      borderBottom: \"1px solid black\",\r\n      padding: \"5px 10px\",\r\n      fontSize: \"15px\",\r\n    },\r\n\r\n    \"& .MuiSvgIcon-root\": {\r\n      color: \"black\",\r\n      fontSize: \"55px\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction MuiAppBar({ setSearchValue, isHide }) {\r\n  const classes = useStyles();\r\n\r\n  const [isBlue, setBlue] = useState(false);\r\n\r\n  const [isDrawerOpen, setDrawer] = useState(false);\r\n\r\n  const [searchValue, setsearchValue] = useState(\"\");\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const onFocusHandelar = () => {\r\n    setBlue(true);\r\n  };\r\n\r\n  const toggelDrawer = (open) => (event) => {\r\n    // console.log(\"clicked\")\r\n    setDrawer(open);\r\n  };\r\n\r\n  const onSubmitHandeler = (e) => {\r\n    console.log(searchValue);\r\n    setSearchValue(searchValue);\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  const onChangeHandelar = (e) => {\r\n    setsearchValue(e.target.value);\r\n  };\r\n\r\n  // const onClickNewPageHandeler = (e) => {\r\n  //     e.preventDefault();\r\n\r\n  //     window.location.href = '/suggestcourse';\r\n  // }\r\n\r\n  useEffect(() => {}, [searchValue]);\r\n\r\n  return (\r\n    <div>\r\n      <AppBar elevation={3} className={classes.root}>\r\n        <Toolbar className={classes.toolBar}>\r\n          <div style={{ display: \"flex\" }}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              className={classes.iconBtn}\r\n              onClick={toggelDrawer(true)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Drawer\r\n              anchor=\"left\"\r\n              open={isDrawerOpen}\r\n              onClose={toggelDrawer(false)}\r\n              className={classes.drawerRoot}\r\n            >\r\n              <List>\r\n                <ListItem\r\n                  button\r\n                  className=\"drawerListItem\"\r\n                  component={Link}\r\n                  to=\"/\"\r\n                >\r\n                  <ListItemIcon>\r\n                    <ExploreOutlinedIcon />\r\n                  </ListItemIcon>\r\n                  <div>\r\n                    <p style={{ margin: \"0\" }}>Explore</p>\r\n                  </div>\r\n                </ListItem>\r\n                <ListItem\r\n                  button\r\n                  className=\"drawerListItem\"\r\n                  component={Link}\r\n                  to=\"/popularchoices\"\r\n                >\r\n                  <ListItemIcon>\r\n                    <FlareOutlinedIcon />\r\n                  </ListItemIcon>\r\n                  <div>\r\n                    <p style={{ margin: \"0\" }}>Popular Choices</p>\r\n                  </div>\r\n                </ListItem>\r\n                <ListItem\r\n                  button\r\n                  className=\"drawerListItem\"\r\n                  component={Link}\r\n                  to=\"/suggestcourse\"\r\n                >\r\n                  <ListItemIcon>\r\n                    <ControlPointOutlinedIcon />\r\n                  </ListItemIcon>\r\n                  <div>\r\n                    <p style={{ margin: \"0\" }}>Suggest Course</p>\r\n                  </div>\r\n                </ListItem>\r\n                <ListItem\r\n                  button\r\n                  className=\"drawerListItem\"\r\n                  component=\"a\"\r\n                  href=\"mailto:www.freecourseyard.com\"\r\n                >\r\n                  <ListItemIcon>\r\n                    <PermContactCalendarOutlinedIcon />\r\n                  </ListItemIcon>\r\n                  <div>\r\n                    <p style={{ margin: \"0\" }}>Contact</p>\r\n                  </div>\r\n                </ListItem>\r\n              </List>\r\n            </Drawer>\r\n            <p\r\n              className={Styles.textLg}\r\n              style={{ position: \"relative\", bottom: \"-11px\" }}\r\n            >\r\n              FREECOURSEYARD\r\n            </p>\r\n          </div>\r\n          {!isHide ? (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"flex-end\",\r\n                width: \"100%\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <div\r\n                className={!isBlue ? classes.searchInput : classes.searchInput2}\r\n              >\r\n                <form onSubmit={onSubmitHandeler}>\r\n                  <input\r\n                    placeholder=\"Search...\"\r\n                    className={classes.inputStyle}\r\n                    onFocus={onFocusHandelar}\r\n                    onBlur={() => {\r\n                      setBlue(false);\r\n                    }}\r\n                    value={searchValue}\r\n                    onChange={onChangeHandelar}\r\n                  />\r\n                </form>\r\n              </div>\r\n              <div>\r\n                <IconButton\r\n                  aria-label=\"delete\"\r\n                  style={{ padding: \"0\", color: \"#bdbdbd\" }}\r\n                  onClick={() => setOpen(!open)}\r\n                >\r\n                  <AccountCircleIcon fontSize=\"large\" />\r\n                </IconButton>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <> </>\r\n          )}\r\n        </Toolbar>\r\n        {open && <Dropdown />}\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MuiAppBar;\r\n",["85","86"],"/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/SuggestCourse.jsx",["87"],"import { Button, makeStyles, Snackbar, TextField } from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport MuiAppBar from \"./appbarComponent/MuiAppBar\";\nimport Footer from \"./footerComponent/Footer\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: \"auto\",\n    width: \"60%\",\n    \"& .MuiFormControl-root\": {\n      width: \"100%\",\n      marginTop: \"30px\",\n    },\n    \"& .MuiInputBase-input\": {\n      fontSize: \"1.3rem\",\n    },\n  },\n  textField: {\n    width: \"100%\",\n  },\n  heading: {\n    fontSize: \"70px\",\n    textAlign: \"center\",\n    marginBottom: \"0\",\n    marginTop: \"100px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"30px\",\n    },\n  },\n  submitBtn: {\n    marginTop: \"30px\",\n    backgroundColor: \"#afaffb\",\n    padding: \"10px 30px\",\n    fontSize: \"15px\",\n    border: \"1px solid black\",\n    position: \"relative\",\n    left: \"46%\",\n    marginLeft: \"-50px\",\n    fontWeight: \"bold\",\n  },\n}));\n\nfunction SuggestCourse(props) {\n  const isAddCourse = props.addCourse;\n\n  const title = isAddCourse ? `Add` : `Suggest`;\n  const url = isAddCourse\n    ? `https://freecourseyard-backend.glitch.me/addcourse`\n    : `https://freecourseyard-backend.glitch.me/suggestcourse`;\n\n  const classes = useStyles();\n\n  const [errorObj, seterrorObj] = useState({\n    etitle: false,\n    einstructor: false,\n    ecourseUrl: false,\n    edescription: false,\n  });\n\n  const [valueObj, setvalueObj] = useState({\n    title: \"\",\n    instructor: \"\",\n    courseUrl: \"\",\n    description: \"\",\n  });\n\n  const [snackBarOpen, setBar] = useState(false);\n\n  const validate = () => {\n    for (const value in valueObj) {\n      if (valueObj[value] === \"\") {\n        seterrorObj((prevState) => ({\n          ...prevState,\n          [`e${value}`]: true,\n        }));\n        return false;\n      }\n    }\n    return true;\n  };\n\n  const sendDataToServer = async () => {\n    try {\n      // console.log(valueObj);\n      let res = await Axios.post(url, valueObj);\n      setBar(true);\n      setvalueObj({\n        title: \"\",\n        instructor: \"\",\n        courseUrl: \"\",\n        description: \"\",\n      });\n      // console.log(valueObj)\n    } catch (error) {\n      console.log(`server does not respond`);\n      console.log(error);\n    }\n  };\n\n  const onSubmitHandeler = (e) => {\n    e.preventDefault();\n\n    console.log(\"sumit click\");\n\n    if (validate()) {\n      // send form data\n      // console.log(\"No error found...\");\n      seterrorObj({\n        etitle: false,\n        einstructor: false,\n        ecourseUrl: false,\n        edescription: false,\n      });\n      sendDataToServer();\n    } else {\n      console.log(\"error happend...\");\n    }\n  };\n\n  const onChangeHandelar = (e) => {\n    const { name, value } = e.target;\n    setvalueObj((prevState) => ({\n      ...prevState,\n      [name]: value.trim(),\n    }));\n  };\n\n  const handleClose = () => {\n    setBar(false);\n  };\n\n  function Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\n  useEffect(() => {}, [valueObj]);\n\n  return (\n    <div>\n      <MuiAppBar isHide={true} />\n      <p className={classes.heading}>{title} a Course</p>\n      <div className={classes.root}>\n        <form onSubmit={onSubmitHandeler}>\n          <div className={classes.textField}>\n            <TextField\n              id=\"standard-basic\"\n              label=\"Title of Course\"\n              value={valueObj.title}\n              error={errorObj.etitle ? true : false}\n              helperText={errorObj.etitle ? \"This field required\" : \"\"}\n              onChange={onChangeHandelar}\n              name=\"title\"\n            />\n          </div>\n          <div className={classes.textField}>\n            <TextField\n              id=\"standard-basic\"\n              label=\"Instructor\"\n              value={valueObj.instructor}\n              error={errorObj.einstructor ? true : false}\n              helperText={errorObj.einstructor ? \"This field required\" : \"\"}\n              onChange={onChangeHandelar}\n              name=\"instructor\"\n            />\n          </div>\n          <div className={classes.textField}>\n            <TextField\n              id=\"standard-basic\"\n              label=\"Course Url\"\n              value={valueObj.courseUrl}\n              error={errorObj.ecourseUrl ? true : false}\n              helperText={errorObj.ecourseUrl ? \"This field required\" : \"\"}\n              onChange={onChangeHandelar}\n              name=\"courseUrl\"\n            />\n          </div>\n          {!isAddCourse ? (\n            <div className={classes.textField}>\n              <TextField\n                id=\"standard-basic\"\n                label=\"Description\"\n                value={valueObj.description}\n                multiline\n                error={errorObj.edescription ? true : false}\n                helperText={errorObj.edescription ? \"This field required\" : \"\"}\n                onChange={onChangeHandelar}\n                name=\"description\"\n              />\n            </div>\n          ) : (\n            <div className={classes.textField}>\n              <TextField\n                id=\"standard-basic\"\n                label=\"Image Url\"\n                value={valueObj.description}\n                error={errorObj.edescription ? true : false}\n                helperText={errorObj.edescription ? \"This field required\" : \"\"}\n                onChange={onChangeHandelar}\n                name=\"description\"\n              />\n            </div>\n          )}\n\n          <Button disableElevation className={classes.submitBtn} type=\"submit\">\n            Send\n          </Button>\n          <Snackbar\n            open={snackBarOpen}\n            autoHideDuration={3000}\n            anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n            onClose={handleClose}\n          >\n            <Alert severity=\"success\" onClose={handleClose}>\n              {isAddCourse ? `Course Added!` : `Request Send!`}\n            </Alert>\n          </Snackbar>\n        </form>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default SuggestCourse; // name, instructor, course url, Brife Description\n","/home/arindam/Desktop/freecourseyard/src/reportWebVitals.js",[],["88","89"],"/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/BodyComponent/MainBody.jsx",["90"],"import { Button, Container, Grid, makeStyles } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport Styles from \"../../../../App.module.css\";\nimport MuiCard from \"./MuiCard\";\nimport LodingIndecator from \"../LodingIndecator\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n  },\n  showMoreBtn: {\n    backgroundColor: \"transparent\",\n    padding: \"10px 15px\",\n    fontSize: \"15px\",\n    border: \"1px solid black\",\n    display: \"flex\",\n    margin: \"auto\",\n    marginTop: \"30px\",\n    fontWeight: \"bold\",\n  },\n  notFound: {\n    marginTop: \"30vh\",\n    marginBottom: \"70vh\",\n    textAlign: \"center\",\n  },\n});\n\nfunction MainBody(props) {\n  const classes = useStyles();\n\n  const { pageTitleName, courses, onNextPageReq, pageNumber, hideShowMore } = props;\n\n  // const [pageNumber, setPageNumber] = useState(0);\n  console.log(courses);\n\n  const onClickHandelar = (e) => {\n    // setPageNumber(pageNumber + 1);\n    onNextPageReq(pageNumber + 1);\n  };\n\n  return (\n    <Container style={{ maxWidth: \"90%\", marginTop: \"100px\", height: \"100%\" }}>\n      <div className={classes.root}>\n        <p className={Styles.textXl} style={{ margin: \"2.25rem 0\" }}>\n          {pageTitleName}\n        </p>\n        {courses ? (\n          <>\n            <Grid container spacing={2} style={{ marginBottom: \"40px\" }}>\n              {courses.map((data, index) => (\n                <Grid item xs={12} sm={6} md={3} key={index}>\n                  <MuiCard data={data} />\n                </Grid>\n              ))}\n            </Grid>\n          </>\n        ) : (\n          // <h1>No Result Found</h1>\n          <></>\n        )}\n        <LodingIndecator />\n        {!hideShowMore && <Button\n          disableElevation\n          className={classes.showMoreBtn}\n          onClick={onClickHandelar}\n        >\n          Show More\n        </Button>}\n      </div>\n    </Container>\n  );\n}\n\nexport default MainBody;\n","/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/BodyComponent/MuiCard.jsx",[],"/home/arindam/Desktop/freecourseyard/src/index.js",[],["91","92"],"/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/LodingIndecator.jsx",["93","94","95","96"],"import React from 'react';\nimport { usePromiseTracker } from \"react-promise-tracker\";\nimport { ClimbingBoxLoader, ClockLoader, GridLoader, PropagateLoader, RotateLoader } from \"react-spinners\";\n\nfunction LodingIndecator() {\n\n    const { promiseInProgress } = usePromiseTracker();\n\n    return (\n        promiseInProgress && (\n            <div\n                style={{\n                    width: \"100%\",\n                    height: \"100%\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                }}\n            >\n                <GridLoader color=\"#0E27A8\" loading={true} size={20} />\n            </div>\n        )\n    );\n};\n\nexport default LodingIndecator\n","/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/PopularChoices.jsx",[],"/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/Hooks/useLoadData.jsx",[],"/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/appbarComponent/LogInDialog.jsx",["97"],"import {\n  Dialog,\n  makeStyles,\n  TextField,\n  useMediaQuery,\n  useTheme,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: \"10px\",\n  },\n  textField: {\n    width: \"200%\",\n    margin: \"0px 10px\",\n  },\n  submitBtn: {\n    marginTop: \"30px\",\n    backgroundColor: \"#afaffb\",\n    padding: \"10px 30px\",\n    fontSize: \"15px\",\n    border: \"1px solid black\",\n    position: \"relative\",\n    left: \"46%\",\n    marginLeft: \"-50px\",\n    fontWeight: \"bold\",\n  },\n}));\n\nfunction LogInDialog({ isOpen, handleClose }) {\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const classes = useStyles();\n\n  const [errorObj, seterrorObj] = useState({\n    eemail: false,\n    epassword: false,\n  });\n\n  const [valueObj, setvalueObj] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const validate = () => {\n    for (const value in valueObj) {\n      if (valueObj[value] === \"\") {\n        seterrorObj((prevState) => ({\n          ...prevState,\n          [`e${value}`]: true,\n        }));\n        return false;\n      }\n    }\n    return true;\n  };\n\n  const onSubmitHandeler = (e) => {\n    e.preventDefault();\n\n    console.log(\"sumit click\");\n\n    if (validate()) {\n      // send form data\n      console.log(\"No error found...\");\n      seterrorObj({\n        eemail: false,\n        epassword: false,\n      });\n\n      // sendDataToServer(); check in server\n    } else {\n      console.log(\"error happend...\");\n    }\n  };\n\n  const onChangeHandelar = (e) => {\n    const { name, value } = e.target;\n    setvalueObj((prevState) => ({\n      ...prevState,\n      [name]: value.trim(),\n    }));\n  };\n  return (\n    <div>\n      <Dialog fullScreen={fullScreen} open={isOpen} onClose={handleClose}>\n        <div className={classes.root}>\n          <form onSubmit={onSubmitHandeler}>\n            <div className={classes.textField}>\n              <TextField\n                id=\"standard-basic\"\n                label=\"Title of Course\"\n                defaultValue=\"\"\n                error={errorObj.email ? true : false}\n                helperText={errorObj.email ? \"This field required\" : \"\"}\n                onChange={onChangeHandelar}\n                name=\"title\"\n                type=\"text\"\n              />\n            </div>\n            <div className={classes.textField}>\n              <TextField\n                id=\"standard-basic\"\n                label=\"Instructor\"\n                defaultValue=\"\"\n                error={errorObj.password ? true : false}\n                helperText={errorObj.password ? \"This field required\" : \"\"}\n                onChange={onChangeHandelar}\n                name=\"instructor\"\n                type=\"password\"\n              />\n            </div>\n          </form>\n        </div>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default LogInDialog;\n","/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/appbarComponent/Dropdown.jsx",["98"],"/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/LogInPage.jsx",["99"],"import {\n  Button,\n  FormControl,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  makeStyles,\n  OutlinedInput,\n  Snackbar,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport MuiAppBar from \"./appbarComponent/MuiAppBar\";\nimport { UserContext, SetUserContext } from \"../../../App\";\nimport Footer from \"./footerComponent/Footer\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nconst useStyle = makeStyles({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    height: \"100vh\",\n  },\n  formDiv: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  },\n  inputField: {\n    width: \"100%\",\n    margin: \"10px\",\n  },\n  submitBtn: {\n    marginTop: \"30px\",\n    backgroundColor: \"#afaffb\",\n    padding: \"10px 30px\",\n    fontSize: \"15px\",\n    border: \"1px solid black\",\n    fontWeight: \"bold\",\n  },\n});\n\nfunction LogInPage(props) {\n  const isLogIn = props.isLogIn;\n\n  const [showPassword, setShowPassword] = useState(false);\n  const [openSnackBar, setOpenSnackBar] = useState(false);\n  const [status, setStatus] = useState(\"\");\n  const [statusErr, setStatusErr] = useState(false);\n\n  const handleClose = () => {\n    setOpenSnackBar(false);\n  };\n\n  const user = useContext(UserContext);\n  const setUser = useContext(SetUserContext);\n\n  const emailPattern = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n  const [values, setValues] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const [errorObj, seterrorObj] = useState({\n    ename: isLogIn ? true : false,\n    eemail: false,\n    epassword: false,\n  });\n\n  const handleChange = (prop) => (event) => {\n    // console.log(values);\n    const val = event.target.value.trim();\n\n    setValues({ ...values, [prop]: val });\n  };\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const validate = () => {\n    for (const value in values) {\n      if (isLogIn && value === \"name\") continue;\n\n      if (value === \"email\") {\n        if (values[value].match(emailPattern)) {\n          return true;\n        } else {\n          seterrorObj((prevState) => ({\n            ...prevState,\n            [`e${value}`]: true,\n          }));\n          return false;\n        }\n      }\n\n      if (values[value] === \"\") {\n        seterrorObj((prevState) => ({\n          ...prevState,\n          [`e${value}`]: true,\n        }));\n        return false;\n      }\n    }\n    return true;\n  };\n\n  const onSubmitHandeler = async (e) => {\n    e.preventDefault();\n\n    console.log(\"login submit click\");\n\n    if (validate()) {\n      // send form data\n      try {\n        const urlPoint = isLogIn ? `login` : `signup`;\n        let res = await axios.post(\n          `https://freecourseyard-backend.glitch.me/${urlPoint}`,\n          values\n        );\n        setStatus(res.data.status);\n        setOpenSnackBar(true);\n        if (res.data.status === \"Login Successfull\") {\n          localStorage.setItem(\"token\", res.data.token);\n          setUser({ token: res.data.token });\n          console.log(user.token);\n        }\n        if(res.data.status !== 'User Created') setStatusErr(true);\n        else setStatusErr(false);\n        console.log(res.data.status);\n        seterrorObj({\n          ename: \"\",\n          eemail: \"\",\n          epassword: \"\",\n        });\n        console.log(values);\n      } catch (error) {\n        alert(error.message);\n      }\n    } else {\n      console.log(\"error happend in log in...\");\n    }\n  };\n\n  const passwordText = isLogIn\n    ? `Enter your password`\n    : `Please enter a password of 8 to 16 character. \n                                      Consist of atleast one capital & small letter, one digit and one spacial character`;\n\n  const classes = useStyle();\n\n  if (user.token) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <>\n      <MuiAppBar isHide={true} />\n      <div className={classes.root}>\n        {isLogIn ? <h1>Log In</h1> : <h1>Sign Up</h1>}\n        <form autoComplete=\"off\" onSubmit={onSubmitHandeler}>\n          <div className={classes.formDiv}>\n            {!isLogIn && (\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Full Name\"\n                variant=\"outlined\"\n                className={classes.inputField}\n                onChange={handleChange(\"name\")}\n                error={errorObj.ename ? true : false}\n                helperText={errorObj.ename ? \"This field required\" : \"\"}\n              />\n            )}\n\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Email\"\n              variant=\"outlined\"\n              className={classes.inputField}\n              onChange={handleChange(\"email\")}\n              error={errorObj.eemail ? true : false}\n              helperText={errorObj.eemail ? \"This field required\" : \"\"}\n            />\n            <Tooltip\n              disableFocusListener\n              placement=\"top\"\n              title={passwordText}\n              arrow\n            >\n              <FormControl variant=\"outlined\" className={classes.inputField}>\n                <InputLabel htmlFor=\"outlined-adornment-password\">\n                  Password\n                </InputLabel>\n                <OutlinedInput\n                  id=\"outlined-adornment-password\"\n                  type={showPassword ? \"text\" : \"password\"}\n                  // value={values.password}\n                  onChange={handleChange(\"password\")}\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowPassword}\n                        edge=\"end\"\n                      >\n                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                  labelWidth={70}\n                  error={errorObj.epassword ? true : false}\n                  helperText={errorObj.epassword ? \"This field required\" : \"\"}\n                />\n              </FormControl>\n            </Tooltip>\n            <Button\n              disableElevation\n              className={classes.submitBtn}\n              type=\"submit\"\n            >\n              {isLogIn ? <>Log In</> : <>Sign Up</>}\n            </Button>\n          </div>\n        </form>\n      </div>\n      <Snackbar\n        open={openSnackBar}\n        autoHideDuration={6000}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n        onClose={handleClose}\n      >\n        <Alert\n          onClose={handleClose}\n          severity={!statusErr ? \"success\" : \"error\"}\n        >\n          {status}\n        </Alert>\n      </Snackbar>\n      <Footer />\n    </>\n  );\n}\n\nexport default LogInPage;\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n","/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/LogOut.jsx",["100"],"import React, { useContext, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { UserContext, SetUserContext } from \"../../../App\";\n\nfunction LogOut() {\n  const user = useContext(UserContext);\n  const setUser = useContext(SetUserContext);\n  if (user.token) {\n    localStorage.removeItem(\"token\");\n  }\n  useEffect(() => {\n    setUser({});\n  }, []);\n  return <Redirect to=\"/\" />;\n}\n\nexport default LogOut;\n","/home/arindam/Desktop/freecourseyard/src/components/newcomponents/explore/FavoriteCourses.jsx",["101"],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":15,"column":8,"nodeType":"108","messageId":"109","endLine":15,"endColumn":19},{"ruleId":"106","severity":1,"message":"110","line":97,"column":9,"nodeType":"108","messageId":"109","endLine":97,"endColumn":20},{"ruleId":"102","replacedBy":"111"},{"ruleId":"104","replacedBy":"112"},{"ruleId":"106","severity":1,"message":"113","line":87,"column":11,"nodeType":"108","messageId":"109","endLine":87,"endColumn":14},{"ruleId":"102","replacedBy":"114"},{"ruleId":"104","replacedBy":"115"},{"ruleId":"106","severity":1,"message":"116","line":2,"column":17,"nodeType":"108","messageId":"109","endLine":2,"endColumn":25},{"ruleId":"102","replacedBy":"117"},{"ruleId":"104","replacedBy":"118"},{"ruleId":"106","severity":1,"message":"119","line":3,"column":10,"nodeType":"108","messageId":"109","endLine":3,"endColumn":27},{"ruleId":"106","severity":1,"message":"120","line":3,"column":29,"nodeType":"108","messageId":"109","endLine":3,"endColumn":40},{"ruleId":"106","severity":1,"message":"121","line":3,"column":54,"nodeType":"108","messageId":"109","endLine":3,"endColumn":69},{"ruleId":"106","severity":1,"message":"122","line":3,"column":71,"nodeType":"108","messageId":"109","endLine":3,"endColumn":83},{"ruleId":"106","severity":1,"message":"123","line":8,"column":17,"nodeType":"108","messageId":"109","endLine":8,"endColumn":26},{"ruleId":"106","severity":1,"message":"116","line":2,"column":40,"nodeType":"108","messageId":"109","endLine":2,"endColumn":48},{"ruleId":"106","severity":1,"message":"123","line":15,"column":29,"nodeType":"108","messageId":"109","endLine":15,"endColumn":38},{"ruleId":"124","severity":1,"message":"125","line":13,"column":6,"nodeType":"126","endLine":13,"endColumn":8,"suggestions":"127"},{"ruleId":"106","severity":1,"message":"128","line":4,"column":10,"nodeType":"108","messageId":"109","endLine":4,"endColumn":18},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'LogInDialog' is defined but never used.","Identifier","unusedVar","'handleClose' is assigned a value but never used.",["129"],["130"],"'res' is assigned a value but never used.",["129"],["130"],"'useState' is defined but never used.",["129"],["130"],"'ClimbingBoxLoader' is defined but never used.","'ClockLoader' is defined but never used.","'PropagateLoader' is defined but never used.","'RotateLoader' is defined but never used.","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setUser'. Either include it or remove the dependency array.","ArrayExpression",["131"],"'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},"Update the dependencies array to be: [setUser]",{"range":"134","text":"135"},[370,372],"[setUser]"]